#!/bin/bash
gige_num_to_name()
{
if [ $# -lt 2 ]; then
    echo 'need two arguments: hutch & number'
fi
HUTCH=${1^^}
hutch=${1,,}
VIEWERCFG=/reg/g/pcds/pyps/config/$hutch/camviewer.cfg
printf -v GIGENUM "%02d" $2
GIGEBASE=$HUTCH:GIGE:$GIGENUM

echo `grep $GIGEBASE $VIEWERCFG | grep -v '#' | awk 'BEGIN { FW = "," }; {print $4}' | sed s/,//g`
}

isNum(){
if [ $# -lt 1 ]; then
    return 2
fi

case $1 in
    ''|*[!0-9]*) return 1;;
    *) return 0;;
esac
}

list_cams()
{
if [ $# -lt 1 ]; then
    echo 'need one arguments: hutch '
fi
HUTCH=${1^^}
hutch=${1,,}
VIEWERCFG=/reg/g/pcds/pyps/config/$hutch/camviewer.cfg
GIGEBASE=$HUTCH:GIGE:

for gige_cam in `grep -v '#' $VIEWERCFG | awk 'BEGIN { FW = "," }; {print $4 "\n" }' | sed s/,//g`; do
    echo $gige_cam
done

}

usage()
{
cat << EOF
usage: $0 options

start the viewer for controls cameras

OPTIONS:
-c camera name as in camera list or gige #
-l print list of cameras
-w # (wait for # hours to ask to renew, default 2 and 12 for GIGEs)
-r # update rate limit (default 5)
-t look at XTCAV
-s look at the FEE spectrometer
-H hutch: use a specific hutches camviewer config file
EOF
}

hutch=`get_info --gethutch`
if [ $hutch = unknown_hutch ]; then
    echo 'unknown hutch, cannot use camViewer script'
    exit 1
fi

CAMNUM=0
WAIT=0
RATE=-1

EXE=/reg/g/pcds/pyps/config/$hutch/camviewer/run_viewer.csh
#EXE='/reg/g/pcds/pyps/apps/camviewer/latest/run_viewer.csh'
PVLIST=/reg/g/pcds/pyps/config/$hutch/camviewer.cfg
CAMNUM=0
WAIT=0
RATE=-1

while getopts "c:w:r:H:hlts" OPTION
do
    case $OPTION in
	h)
	    usage
	    exit 1
	    ;;
	l)
	    list_cams $hutch
	    exit 1
	    ;;
	c)
	    CAM=$OPTARG
	    if isNum $CAM; then
		CAMNUM=$CAM
		CAMNAME=`gige_num_to_name $hutch $CAM`
	    else
		CAMNAME=$CAM
		CAMNUM=-1
	    fi
	    ;;
	t)
	    CAMNAME=xtcav
	    ;;
	s)
	    CAMNAME=fee_spec
	    ;;
	w)
	    WAIT=$OPTARG
	    ;;	    
	r)
	    RATE=$OPTARG
	    ;;	    
	H)
	    hutch=$OPTARG
	    ;;
	esac
done

if [ $CAMNUM -eq 0 ]; then
    if [ $hutch = "amo" ]; then
        CAMNAME='UNIQ:01'
    elif [ $hutch = "sxr" ]; then
	CAMNAME=P1
    elif [ $hutch = "xpp" ]; then
	CAMNAME=hx2_shared
    else
	CAMNAME=xcs_yag2
    fi
fi
    
export EPICS_CA_MAX_ARRAY_BYTES=24000000
#echo cameranum: $CAMNUM
if [ `echo $CAMNAME | wc -w` -gt 1 ]; then
    echo 'Please select from: ',
    for camname in $CAMNAME; do
	echo $camname
    done
    read -r CAMNAME
fi
echo cameraname: $CAMNAME
#exit
if [ $WAIT -gt 0 ]; then
    if [ $RATE -gt 0 ]; then
	echo $EXE --camera $CAMNAME --instrument $hutch --pvlist $PVLIST --idle $WAIT --rate $RATE&
	$EXE --camera $CAMNAME --instrument $hutch --pvlist $PVLIST --idle $WAIT --rate $RATE&
    else
	echo $EXE --camera $CAMNAME --instrument $hutch --pvlist $PVLIST --idle $WAIT&
	$EXE --camera $CAMNAME --instrument  $hutch --pvlist $PVLIST --idle $WAIT&
    fi
else
    if [ $RATE -gt 0 ]; then
	echo $EXE --camera $CAMNAME --instrument $hutch --pvlist $PVLIST --rate $RATE&
	$EXE --camera $CAMNAME --instrument  $hutch --pvlist $PVLIST --rate $RATE&
    else
	echo $EXE --camera $CAMNAME --instrument $hutch --pvlist $PVLIST &
	$EXE --camera $CAMNAME --instrument  $hutch --pvlist $PVLIST &
    fi
fi
