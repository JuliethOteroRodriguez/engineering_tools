#!/bin/bash
# Checks out a package from the pcdshub github at a particular tag.
# Does not update "latest" softlinks, these are inconsistent between packages.
# Make sure your tag exists before running.
usage="pkg_release <package> <tag>"
if [ -z "${2}" ]; then
  echo "${usage}"
  exit
fi
PACKAGE="${1}"
TAG="${2}"
URL="https://github.com/slaclab/${PACKAGE}"
SSH_URL="git@github.com:slaclab/${PACKAGE}"
TEMP="pkg_release_tempdir"
if [ -d "${TEMP}" ]; then
  echo "Removing leftover ${TEMP} directory..."
  rm -rf "${TEMP}"
fi
echo "Testing connection to github.com"
if ! ping -c 1 github.com &> /dev/null; then
  echo "github.com not responding to ping. Exiting."
  exit
fi
echo "Connection successful."
TEST_OUTPUT=$(ssh -Tx git@github.com 2>&1)
if echo $TEST_OUTPUT | grep "successfully authenticated" > /dev/null; then
  echo "Attemping clone using SSH..."
  echo "URL = $SSH_URL"
  set -e  # Catch error in git clone
  git clone "${SSH_URL}" "${TEMP}"
elif echo $TEST_OUTPUT | grep "Permission denied\|no kex alg" > /dev/null; then
  echo "Attemping clone using HTTPS..."
  echo "URL = $URL"
  set -e  # Catch error in git clone
  git clone "${URL}" "${TEMP}"
else
  echo "Error: "
  ssh -Tx git@github.com
fi
unset TEST_OUTPUT
set +e
echo "Checking out tag..."
pushd "${TEMP}"
git tag -l | grep "${TAG}" >/dev/null
if [ "${?}" == "1" ]; then
  echo "Error: could not find tag "${TAG}". Aborting."
  echo "Available tags:"
  git tag -l
  exit
fi
set -e  # Catch error in git checkout
git checkout "${TAG}"
popd
echo "Renaming "${TEMP}" directory to ${TAG}"
mv "${TEMP}" "${TAG}"
echo "Write-protecting directory..."
chmod -R a-w "${TAG}"
echo "Created $(readlink -f ${TAG})"
