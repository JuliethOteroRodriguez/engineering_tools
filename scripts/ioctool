#!/bin/bash

# Shell environment variables are now all loaded from scripts located
# in /reg/g/pcds/setup
#iocs/pvs live in/reg/d/iocData/ioc*/iocInfo/IOC.pvlist


usage(){
cat << EOF
usage: $0 ioc|pv [options]

Script that  returns information about an ioc given its name or a PV associated with it

Signature:
iocTool <ioc>|<pv> [command] #que es <ioc>|<pv>
d

default command is 'name', list of commands:
name : returns the name of the ioc
cfg : returns cfg file if it exists, otherwise st.cmd (path)
less : opens the cfg (or st.cmd) in less
dir : returns the directory the ioc is running from
cddir : open the directory the ioc is running from 
telnet : starts a telnet session with the ioc 
data : returns the path of the appropriate iocData directory if it exists


EOF
}

if [[ ($1 == "--help") || ($1 == "-h") ]]; then
        usage
        exit 0
fi


   
#<2 ---- error channel implementation needed 

#returning the name of the ioc given the pv or name itself

 #can be either a ioc or pv
if [ $# -lt 1 ]; then
   echo  'need arguments: input ioc or pv name'
fi
	
NAME=$1
CMD=$2

#################################################################


#where a pv will be converted to an ioc...can use 'cainfo'or find_pv

if [[ $NAME == *':'* ]]; then
   NAME=$(grep_pv "$NAME" | sed -n 's/\/reg\/d\/iocData\/\(\S*\)\/iocInfo/\1/p')
elif [[ $NAME == *'-'* ]]; then
   NAME=$1
fi

#################################################################

if [ "$CMD" == "name" ]; then
   echo "$NAME"

#################################################################

elif [ "$CMD" ==  "dir" ]; then
   iocpath=""
   iocpath=$(grep_ioc "$NAME" all | grep "id:'$NAME'" | sed -n "s/^.*dir: '\(\S*\)'.*$/\1/p"); 
   if [ "$iocpath" == "" ]; then
      echo "Did not find ${NAME} running anywhere. Exiting..."
      return 1
   fi
  
   if [[ ! $iocpath =~ ^/.* ]]; then
      iocpath=/reg/g/pcds/epics/${iocpath}
   fi
   echo "$iocpath"

#################################################################

elif [ "$CMD" == "cddir" ]; then
   iocpath=""
   iocpath=$(grep_ioc "$NAME" all | grep "id:'$NAME'" | sed -n "s/^.*dir: '\(\S*\)'.*$/\1/p");
   if [ "$iocpath" == "" ]; then
      echo "Did not find ${NAME} running anywhere. Exiting..."
      return 1
   fi

   if [[ ! $iocpath =~ ^/.* ]]; then
      iocpath=/reg/g/pcds/epics/${iocpath}
      #iocs= "${iocpath}"
   fi
   cd "${iocpath}"

#################################################################

elif [ "$CMD" == "cfg" ]; then
   iocpath=""
   iocpath=$(grep_ioc "$NAME" all | grep "id:'$NAME'" | sed -n "s/^.*dir: '\(\S*\)'.*$/\1/p");
   if [ "$iocpath" == "" ]; then
      echo "Did not find ${NAME} running anywhere. Exiting..."
      return 1
   fi

   if [[ ! $iocpath =~ ^/.* ]]; then
      iocpath=/reg/g/pcds/epics/${iocpath}
   fi

#################################################################

elif [ "$CMD" == "less" ]; then
   iocpath=""
   iocpath=$(grep_ioc "$NAME" all | grep "id:'$NAME'" | sed -n "s/^.*dir: '\(\S*\)'.*$/\1/p");
   if [ "$iocpath" == "" ]; then
      echo "Did not find ${NAME} running anywhere. Exiting..."
      return 1
   fi

   if [[ ! $iocpath =~ ^/.* ]]; then
      iocpath=/reg/g/pcds/epics/${iocpath}
   fi
   iocfile="${iocpath}"/"$NAME".cfg;
   if [ -f "$iocfile" ]; then
      less $iocfile
   else
      iocfile=${iocpath}/iocBoot/${NAME}/st.cmd
      if [ -f "$iocfile" ]; then
         less "$iocfile"
      else
         echo -e "Neither file found:\n"${iocpath}"/"${NAME}".cfg\n$iocfile"
      fi
   fi

#################################################################

elif [ "$CMD" == "data" ]; then
   iocdatapath=/reg/d/iocData/"${NAME}"/iocInfo
   echo "$iocdatapath"
#################################################################

elif [ "$CMD" == "telnet" ]; then
   HOST=$(grep_ioc "$NAME" all | grep "id:'$NAME'" | sed -n "s/^.*host: '\(\S*\)'.*$/\1/p");
   PORT=$(grep_ioc "$NAME" all | grep "id:'$NAME'" | sed -n "s/^.*port: \(\S*\),.*$/\1/p");
   echo "$HOST"
   echo "$PORT"
   telnet "$HOST" "$PORT"

fi

