#! /usr/bin/env bash

function iocfpv {
     grep_pv $1 | sed -n 's/\/reg\/d\/iocData\/\(\S*\)\/iocInfo/\1/p'
}


function error {
   iocname=$@
   for ioc in $iocname
   do
      iocpath=""
      iocpath=$(grep_ioc $ioc all | grep "id:'$ioc'" | sed -n "s/^.*dir: '\(\S*\)'.*$/\1/p");
      if [[ $iocpath == "" ]]; then
         echo "Did not find ${ioc} running anywhere. Exiting..."
         return 1
      fi
   done

}  


usage(){
cat << EOF
usage: $0 ioc|pv [options]

Script that returns information about an ioc given its name or a PV associated with it

Signature:
iocTool <ioc>|<pv> [option] <ioc>|<pv>

default command is 'name', list of options:
name : returns the name of the ioc
dir : returns the directory the ioc is running from
cddir : open the directory the ioc is running from 
less : opens the cfg (or st.cmd) in less
data : returns the path of the appropriate iocData directory if it exists
telnet : starts a telnet session with the ioc 

EOF
}

if [[ ($1 == "--help") || ($1 == "-h") ]]; then
        usage
        exit 0
fi


   
#<2 ---- error channel implementation needed 

if [ $# -lt 1 ]; then
   echo  'need arguments: input ioc or pv name'
fi
	
NAME=$1
CMD=$2

#################################################################

if [[ $NAME == *':'* ]]; then
   ioc=''
   NAME=$(iocfpv "$NAME")
elif [[ $NAME == *'-'* ]]; then
   ioc=""
   ioc=$(grep_ioc "$NAME" | grep "id:'$ioc'" | sed -n "s/^.*host: '\(\S*\)'.*$/\1/p");
   if [[ $iocpath == "" ]]; then
      echo "Did not find ${ioc} running anywhere. Exiting..."
      exit 0
   
   else
      NAME=$1
   fi
fi   


#################################################################

if [ "$CMD" == "name" ]; then
#   error "$NAME"   
   echo "IOC: $NAME"
elif [[ "$CMD" == "" ]]; then
   echo "IOC: $NAME"

#################################################################

elif [ "$CMD" ==  "dir" ]; then

#   iocpath=""
#   iocpath=$(grep_ioc "$NAME" all | grep "id:'$NAME'" | sed -n "s/^.*dir: '\(\S*\)'.*$/\1/p");
#   if [ "$iocpath" == "" ]; then
#      echo "Did not find ${NAME} running anywhere. Exiting..."
#      return 1
#      exit 0
#
#   fi
   error "$NAME"
   if [[ ! $iocpath =~ ^/.* ]]; then
      iocpath=/reg/g/pcds/epics/"${iocpath}"
     echo "IOC path: $iocpath"

   elif [[ ! $iocpath = ^/.* ]]; then
      iocpath= "${iocpath}"
      echo "IOC path: $iocpath"
   else
      exit 0
   fi
#   echo "IOC path: $iocpath"
#################################################################

elif [ "$CMD" == "cddir" ]; then
   error "$NAME"

   if [[ ! $iocpath =~ ^/.* ]]; then
      iocpath=/reg/g/pcds/epics/${iocpath}
      #iocs= "${iocpath}"
      cd "${iocpath}"

   elif [[ ! $iocpath = ^/.* ]]; then
      iocpath= "${iocpath}"
      cd "${iocpath}"
   else
      exit 0
   fi

 #################################################################

elif [ "$CMD" == "less" ]; then
   error "$NAME"

   if [[ ! $iocpath =~ ^/.* ]]; then
      iocpath=/reg/g/pcds/epics/${iocpath}
   fi
   iocfile="${iocpath}"/"$NAME".cfg;
   if [ -f "$iocfile" ]; then
      less $iocfile
   else
      iocfile=${iocpath}/iocBoot/${NAME}/st.cmd
      if [ -f "$iocfile" ]; then
         less "$iocfile"
      else
         echo -e "Neither file found:\n"${iocpath}"/"${NAME}".cfg\n$iocfile"
         return 1
         exit 0
      fi
   fi
#################################################################

elif [ "$CMD" == "data" ]; then
   error "$NAME"

   if [[ ! $iocpath =~ ^/.* ]]; then
      iocdatapath=/reg/d/iocData/"${NAME}"/iocInfo
         echo "${iocdatapath}"
   elif [[ ! $iocpath = ^/.* ]]; then
      iocdatapath=/reg/d/iocData/"${NAME}"/iocInfo
         echo "$iocdatapath"
   fi




#################################################################

elif [ "$CMD" == "telnet" ]; then
   error "$NAME"
   HOST=$(grep_ioc "$NAME" all | grep "id:'$NAME'" | sed -n "s/^.*host: '\(\S*\)'.*$/\1/p")
   PORT=$(grep_ioc "$NAME" all | grep "id:'$NAME'" | sed -n "s/^.*port: \(\S*\),.*$/\1/p");
   echo "$HOST"
   echo "$PORT"
   telnet "$HOST" "$PORT"


fi

