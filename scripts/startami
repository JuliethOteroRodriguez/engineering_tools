#! /usr/bin/env bash

HUTCH=`get_hutch_name`
EXPNAME=`get_curr_exp`
CNFEXT=.cnf
if [ $# -eq 1 ]; then
    if [ $1 == 'cxi-daq' ]; then
        CNFEXT=_0.cnf
    elif [ $1 == 'cxi-monitor' ]; then
        CNFEXT=_1.cnf
    fi
fi

#
# this is XPP specific. Don't think we should have local plugins anyways, 
# only release ones. 
#
source /reg/g/pcds/setup/pathmunge.sh
if [ $HUTCH == 'xpp' ]; then
    ldpathmunge /reg/neh/operator/xppopr/ami_plugins
elif [ $HUTCH == 'xcs' ]; then
    ldpathmunge /reg/neh/operator/xcsopr/online/ami_plugins
fi

usage()
{
cat << EOF
usage: $0 options

we are starting another ami session here

OPTIONS:
-s: stop the ami client current running on this machine
EOF
}

STOP_AMI=0
while getopts "h:s" OPTION
do
    case $OPTION in
	h)
	    usage
	    exit 1
	    ;;
	s)
	    stopami
	    ;;
	?)
	    usage
	    exit
	    ;;
	esac
done

DAQHOST=`wheredaq`

ami_base_path=`grep ami_base_path /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT | grep -v '#' | grep -v 'ami_base_path+'  | awk 'BEGIN { FS = "=" }; { print $2}' | sed s/\'//g`
ami_path=$ami_base_path`grep ami_path /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT | grep -v 'ami_path+' | grep -v '#' | awk 'BEGIN { FS = "= " }; { print $2}' | sed s/ami_base_path+// | sed s/\'//g`
proxy_node=`grep 'proxy_node ' /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT | grep -v procmg | grep -v \# | awk {'print $3'} | sed s/_/-/g`
if [[ $proxy_node == 'mon-nodes[0]' ]]; then
    mon_node_line=`grep 'mon_nodes ' /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT  | grep -v '#'`
    proxy_node=`echo $mon_node_line | awk '{for (x=1;x<=NF;x++) if ($x~"daq-") print $x}' | head -n1 | sed s/\,//g | sed s/\'//g | sed s/-fez//g `
fi

netconfig search $proxy_node | grep IP | sed 's/IP: //g' | sed 's/\t172/172/g' > /tmp/amiProxy_IP
proxy_cds=`grep 172 /tmp/amiProxy_IP`
rm /tmp/amiProxy_IP

amicmd=`grep ami_client /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT | grep -v '#' |  awk 'BEGIN { FS = ":" }; { print $4}' | sed s/ami_path//g | sed s/\'+proxy_cds/$proxy_cds/g | sed  s:\'+expname:$EXPNAME/:g | sed s/+\'//g | sed s/\'\}\)//g` 

if [[ $HOSTNAME == $DAQHOST ]]; then
    #running on the DAQ host, this will restart the ami_client!
    read -p "Do you really intend to restart the ami_client on $DAQHOST? (y/n)"
    if [ "$REPLY" == "y" ];then
	echo "Restarting the ami_client...";
	/reg/g/pcds/dist/pds/$HUTCH/current/tools/procmgr/procmgr stop \
	    /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT ami_client 
	/reg/g/pcds/dist/pds/$HUTCH/current/tools/procmgr/procmgr start \
 	    /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT -c 2000000000 -o /reg/g/pcds/pds/$HUTCH/logfiles ami_client 
	exit
    else
	read -p "Do you want to start a second client on the DAQ host $DAQHOST? (y/n)"
	if [ "$REPLY" == "n" ];then
	    exit
	else
	    echo "Starting another ami_client on "$DAQHOST , calling:
	fi
    fi
else
    echo --- connect to proxy on: $proxy_cds, calling:
fi    

#fix for control rooms that have not been upgraded
if [ `uname -a | grep el6 | wc -l ` == 1 ]; then
    echo 'RHEL6 node'
    ami_path=`echo $ami_path | sed s/rhel7/linux/g`
    amicmd=`echo $amicmd | sed s/ami_GUI_path//g`
fi

echo $ami_path$amicmd
exec $ami_path$amicmd&
